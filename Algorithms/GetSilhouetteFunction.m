function [silhouette_vals, interClusterSum] = GetSilhouetteFunction(x, f)
    % Dataset configurations
    datasets = struct( ...
        'D1',  struct('file', 'fisheriris.mat',    'k', 3, 'features', 4), ...
        'D2',  struct('file', 'WiFi.mat',          'k', 4, 'features', 7), ...
        'D3',  struct('file', 'BreastTissu.mat',   'k', 6, 'features', 9), ...
        'D4',  struct('file', 'Fishing.mat',       'k', 3, 'features', 9), ...
        'D5',  struct('file', 'glass.mat',         'k', 6, 'features', 9), ...
        'D6',  struct('file', 'balance.mat',       'k', 3, 'features', 4), ...
        'D7',  struct('file', 'ecoli.mat',         'k', 5, 'features', 7), ...
        'D8',  struct('file', 'blood.mat',         'k', 2, 'features', 4), ...
        'D9',  struct('file', 'Vertebral.mat',     'k', 2, 'features', 6), ...
        'D10', struct('file', 'seed.mat',          'k', 3, 'features', 7), ...
        'D11', struct('file', 'eeg.mat',           'k', 2, 'features', 14), ...
        'D12', struct('file', 'landsat.mat',       'k', 6, 'features', 36), ...
        'D13', struct('file', 'letter.mat',          'k', 26, 'features', 16), ...
        'D14', struct('file', 'spambase.mat',      'k', 2, 'features', 57) ...
    );

    % Validate input
    if ~isfield(datasets, f)
        error('Unknown dataset key: %s', f);
    end

    config = datasets.(f);

    % Load and normalize data
    data = load(fullfile('Datasets', config.file));
    meas = normalize(data.meas, 'range');

    % Extract centroids from the individual vector
    centroids = reshape(x, config.features, config.k)';
    
    % Compute distance from instances to centroids
    D = pdist2(meas, centroids, 'squaredeuclidean');
    
    % Assign instances to closest centroid
    [~, idx] = min(D, [], 2);
    
    % Compute silhouette values (suppress figure)
    fig = figure('Visible', 'off');
    silhouette_vals = silhouette(meas, idx, 'sqEuclidean');
    close(fig);

    % Compute average pairwise inter-cluster distance
    centroidDistances = pdist(centroids, 'squaredeuclidean');
    interClusterSum = mean(centroidDistances);
end
